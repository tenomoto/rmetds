# はじめに

Rは統計が得意なプログラミング言語で、きれいな図を作ることができます。

## Rをインストールする

早速Rをインストールしてみましょう。Rのウェブサイトは<https://www.r-project.org/>です。 Rはターミナル（macのターミナルやWindowsのWindows Terminal等）から使うこともできますが、RStudio <https://posit.co/download/rstudio-desktop/>から使うと便利です。

![RStudio](RStudio.png)

Download and Install Rから自分の使っているOSのコンパイル済バイナリを取得してインストールしてください。

## ヘルプを参照する

Rのヘルプはコンソールで`help()`または`?`を使うか、RStudio右下のHelpで検索できます。

```{r}
help(mean)
```

## 計算をしてみよう

ターミナルでRを起動するか、RStudioを起動してください。

大気に含まれている主要な成分は、窒素、酸素、アルゴンです。 これらの成分はよくかき混ぜられているので、乾燥空気の平均分子量は容積比を重みとした平均で計算できます。

| 成分     | 分子量 | 容積比% |
|----------|-------:|--------:|
| 窒素     |     28 |      78 |
| 酸素     |     32 |      21 |
| アルゴン |     40 |       1 |

: 大気の主成分

```{r}
28 * 0.78 + 32 * 0.21 + 40 * 0.01
```

## グラフを描いてみよう

標準的な気温の鉛直構造として、標準大気が定義されています。 標準大気を縦軸をジオポテンシャル高度、横軸を気温として描画してみましょう。 [ジオポテンシャル高度, geopotential height](https://glossary.ametsoc.org/wiki/Geopotential_height)とは、重力加速度を鉛直積分してジオイド面での重力加速度$g_0=9.80065\,\mathrm{m\,s}^{-2}$で割ったものです。

$$
Z = \frac{1}{g_0}\int_0^zg(z')\mathrm{d}z'
$$ {#eq-geopotential.height}

```{r}
T <- c(15.0, -56.5, -56.5, -44.5, -2.5, -2.5, -58.5, -86.2)
h <- c(0, 11, 20, 32, 47, 51, 71, 84.852)
plot(T, h, type="l")
```

`<-`は代入を表す演算子で左側の`T`や`h`に右側の値を与えています。 `c()`はコンマで区切った値を繋げて（concatenate）ベクトルを作る函数です。 `plot()`でグラフを描いています。引数としてx、yの値である`T`と`h`、グラフの種類を折れ線グラフにする`type="l"`を与えています。

## データを読んでみよう

大気の中には主要成分だけでなく、量は少ないが重要な働きをする微量成分があります。 二酸化炭素は人為起源の排出が原因で増加し続けています。 その様子をグラフにしてみましょう。 気象庁のWord Data Centre for Greenhouse Gases <https://gaw.kishou.go.jp/publications/global_mean_mole_fractions>から年平均csvデータ（Global annual mean mole fractions）のCO2ファイルをダウンロードします。

```{r}
df <- read.csv("co2_annual_20221026.csv")
plot(df$year, df$co2.global.mean.ppm.)
```

`read.csv()`はコンマ区切り（CSV, comma separated value）のデータを読む函数です。 ファイル名は文字列であることを表すために`""`で囲みます。
ファイル名の日付の部分は変わります。
グラフの種類を指定しないと、散布図になります。

`df`には読んだ表の中身が入ります。`df`はデータフレームと呼ばれるクラスのデータ構造です。データフレームは、値が行列に並んでいるだけでなく、行や列に名前がつけられます。

グラフにタイトルをつけ、軸のラベルを変更します。タイトルは`main`で、軸ラベルは`xlab`、`ylab`で指定します。

```{r}
plot(df$year, df$co2.global.mean.ppm.,
     main="Global mean CO2 concentration",
     xlab="year", ylab="CO2 ppm")
```

次に月平均データ（Global monthly mean mole fractions）を使って簡単な時系列解析をしてみます。

```{r}
dfm <- read.csv("co2_monthly_20231115.csv")
co2.mon <- dfm$mole.fraction.ppm.
n <- nrow(dfm)
co2.mon <- ts(co2.mon, start=c(dfm$year[1], dfm$month[1]), frequency=12)
co2.mon.decomp<- decompose(co2.mon)
plot(co2.mon.decomp)
```
`ts()`は一つ目の引数のデータから時系列オブジェクトを作ります。
`frequency=12`は1年を単位として12回の頻度であることを示します。
`decompose()`はデータをトレンド、周期成分と残差に分解します。

残差をさらにスペクトル分解してみましょう。

```{r}
spec.pgram(co2.mon.decomp$random, spans=c(7,7), na.action=na.omit)
abline(v=1)
abline(v=1/3)
```
`spec.pgram`は高速フーリエ変換を利用して、ピリオドグラムを計算します。
`spans`で修正ダニエル法に基づいた平滑化を施すことができます。
右上の青い線は信頼区間を表します。
`co2.mon.decomp$random`には最初と最後に数値でない値（not a number）を`na`が入っていますので、`na.action`で無視します。
ピークに近い、周期1年と3年に対応するところに縦線を入れてみました。
それぞれ年々変動とエルニーニョ現象のような数年周期に対応しているものと考えられます。

Rでは、このように対話的な簡単な操作により、簡単に解析やグラフの作成ができます。

::: {.callout-note title="練習"}
気象庁は様々なデータをCSV形式で提供しています。 それらをRで読んでみましょう。 うまく読めるでしょうか。
:::


-   [「気象業務はいま2021」CSVデータ一覧](https://www.jma.go.jp/jma/kishou/books/hakusho/2021/csvindex.html)
-   [台風位置表](https://www.data.jma.go.jp/yoho/typhoon/position_table/index.html)
-   [数値データページリンク集](https://www.jma.go.jp/jma/menu/arcdata.html)
-   [最新の気象データ](https://www.data.jma.go.jp/obd/stats/data/mdrr/index.html)

